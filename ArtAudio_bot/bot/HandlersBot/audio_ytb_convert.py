from aiogram import types, Dispatcher
from aiogram.types import ReplyKeyboardRemove
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
from create_bot import bot, dp
from KeyBoardsBot.Keyboard import menu_markup, convert_audio_settings
from Dbase import update_path, select_path, select_exit_path, insert_path
from Proccesssor.converter import DownloadAudio


class StatusBot(StatesGroup):
    link = State()
    path_videos = State()
    exit_path = State()


async def start_upload_audio(msg: types.Message):
    chat_id = msg.chat.id
    user = msg.from_user.first_name
    message = f'üí† –ò—Ç–∞–∫, {user}, —Ç—ã –≤—ã–±—Ä–∞–ª –¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª.\n' \
              f'\n' \
              f'‚ùó –ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å, –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø—É—Ç–∏, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–≤–æ–∏ –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–∏ –∏ –∫—É–¥–∞ —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏.\n' \
              f'\n' \
              f'–ü–æ—ç—Ç–æ–º—É –∑–∞–π–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô" –∏ —É–∫–∞–∂–∏ –ø—É—Ç–∏\n' \
              f'–ï—Å–ª–∏ —Ç—ã —É–∂–µ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª, —Ç–æ –Ω–∞–∂–º–∏ "–ù–∞—á–∞—Ç—å  ‚ñ∂"'

    await bot.send_message(chat_id, message, reply_markup=convert_audio_settings())


async def upload_audio(msg: types.Message):
    chat_id = msg.chat.id

    select_answer = select_path()
    if select_answer:
        await bot.send_message(chat_id, '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ –≤ —á–∞—Ç –±–æ—Ç\n', reply_markup=ReplyKeyboardRemove())
    else:
        await bot.send_message(chat_id, '–ú–Ω–µ –Ω—É–∂–Ω–æ –ø—É—Ç–∏, –≥–¥–µ –≤—ã —Ö—Ä–∞–Ω–∏—Ç–µ –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–∏ –∏ –∫—É–¥–∞ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∞—É–¥–∏–æ ‚ùó\n'
                                        '\n'
                                        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô" –∏ —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è')

    @dp.message_handler(content_types=['video'])
    async def upload_video_in_chat(msg: types.Message):
        chat_id = msg.chat.id
        file_name = msg.video.file_name
        exit_path = select_exit_path()
        user = msg.from_user.first_name

        await bot.send_message(chat_id, f'üìã –§–∞–π–ª: {file_name}\n'
                                        f'üìÇ –ü—É—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {exit_path}\n'
                                        f'üì© –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {user}\n'
                                        f'\n'
                                        f'–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ üïû')
        answer = DownloadAudio(file_name).download_audio()

        await bot.send_message(chat_id, answer, reply_markup=menu_markup())


async def cancel(msg: types.Message):
    chat_id = msg.chat.id

    await bot.send_message(chat_id, '–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏', reply_markup=menu_markup())


async def settings(msg: types.Message):
    chat_id = msg.chat.id

    await bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–∞—à–∏ –≤–∏–¥–µ–æ\n'
                                    '\n'
                                    r'üìå –ü—Ä–∏–º–µ—Ä: "C:\Users\Admin\Desktop\my_video"')
    await StatusBot.path_videos.set()


async def get_save_videos(msg: types.Message, state: FSMContext):
    chat_id = msg.chat.id
    path = msg.text

    async with state.proxy() as data:
        data['path'] = path

    await bot.send_message(chat_id, '–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ –ø—É—Ç—å, –∫—É–¥–∞ —Ç—ã –±—É–¥–µ—à—å —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–≤–æ–∏ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏\n'
                                    '\n'
                                    r'üìå –ü—Ä–∏–º–µ—Ä: "C:\Users\Admin\Desktop\save_audio"')
    await StatusBot.exit_path.set()


async def get_exit_path(msg: types.Message, state: FSMContext):
    chat_id = msg.chat.id
    exit_path = msg.text

    async with state.proxy() as data:
        data['exit_path'] = exit_path

    user_path = data['path']
    user_exit_path = data['exit_path']

    result = select_path()

    if result:
        update_path(user_path, user_exit_path)
        await bot.send_message(chat_id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã ‚úÖ', reply_markup=menu_markup())
        await state.finish()

    else:
        insert_path(user_path, user_exit_path)
        await bot.send_message(chat_id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã ‚úÖ', reply_markup=menu_markup())
        await state.finish()


def register_handlers_audio_ytb(dp: Dispatcher):
    dp.register_message_handler(start_upload_audio, Text(equals='–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –≤ –∞—É–¥–∏–æ üîÅ'))
    dp.register_message_handler(upload_audio, Text(equals='–ù–∞—á–∞—Ç—å ‚ñ∂'))

    dp.register_message_handler(settings, Text(equals='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô'))
    dp.register_message_handler(get_save_videos, state=StatusBot.path_videos)
    dp.register_message_handler(get_exit_path, state=StatusBot.exit_path)

    dp.register_message_handler(cancel, Text(equals='–û—Ç–º–µ–Ω–∞ ‚ùå'))
