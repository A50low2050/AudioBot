from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from create_bot import bot
from Dbase import select_path_videos, select_exit_path
from KeyBoardsBot.Keyboard import watch_my_settings, menu_markup


async def watch_settings(msg: types.Message):
    chat_id = msg.chat.id
    await bot.send_message(chat_id, 'üí† –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n'
                                    '\n'
                                    '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Å–º–æ—Ç–µ—Ç—å üëÅ" –∏ —Ç—ã —É–≤–∏–¥–∏—à—å –∫–∞–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É —Ç–µ–±—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã',
                           reply_markup=watch_my_settings())


async def my_settings(msg: types.Message):
    chat_id = msg.chat.id

    path = select_path_videos()
    exit_path = select_exit_path()

    if path and exit_path:

        await bot.send_message(chat_id, f'üéû –ú–µ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö –≤–∏–¥–µ–æ:\n'
                                        f'{path}\n'
                                        f'\n'
                                        f'üíø –ü—É—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö –∞—É–¥–∏–æ:\n'
                                        f'{exit_path}', reply_markup=menu_markup())
    else:
        await bot.send_message(chat_id, '–£ –≤–∞—Å –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ ‚ùó', reply_markup=menu_markup())


async def cancel(msg: types.Message):
    chat_id = msg.chat.id

    await bot.send_message(chat_id, '–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏', reply_markup=menu_markup())


def register_handlers_watch_settings(dp: Dispatcher):
    dp.register_message_handler(watch_settings, Text(equals='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ üëÅ‚Äç'))
    dp.register_message_handler(my_settings, Text(equals='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëÅ'))
    dp.register_message_handler(cancel, Text(equals='–û—Ç–º–µ–Ω–∞ ‚ùå'))
